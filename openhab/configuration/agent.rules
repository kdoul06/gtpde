var curl_demo = 'curl@@-s@@"https://api.dialogflow.com/v1/query?v=20170712&query=Hello!&lang=en&sessionId=2d4c8e7d-6b0a-47e2-83a9-5221ce8fe996&timezone=Europe/Athens"@@-H@@"Authorization:Bearer 6885bd8dc2c14761b973a9ae3f4cfc5c"'
var curl_cmd = "curl@@-s@@"
var curl_http01 = "https://api.dialogflow.com/v1/query?v=20170712&query="
var curl_lang ="&lang=en&sessionId=2d4c8e7d-6b0a-47e2-83a9-5221ce8fe996&timezone=Europe/Athens"
var curl_sw="@@-H@@"
var curl_auth="Authorization:Bearer 6885bd8dc2c14761b973a9ae3f4cfc5c"
var String curl_total

var String curl_result=""
var String to_say=""
var String to_say_more=""
var String source=""
var String intentName=""
var String room=""
var String action=""
var String action1=""
var String action_full=""
var String[] action_parts 
var Integer actionPartsSize
var Boolean action_incomplete 
var String device=""
var Integer logging=1

// import org.openhab.model.script.actions
// import org.openhab.core.library.types
// import java.util


rule "agent"

when Item AgentJSON changed

then 
    var String cmdContent
	
    cmdContent = AgentJSON.state.toString
    curl_result=cmdContent

	if (logging==1) {
		logInfo("","");
		logInfo("","");
		logInfo("","");
		logInfo("","");
		logInfo(" **********************","");
		logInfo(" ***AgentJSON rule ***","");
		logInfo(" **********************","");
		logInfo(" *** AgentJSON received curl-result from voiceCommand Rule --> ","");
	} 
	
	
//	if (transform("JSONPATH", "$.result.score", curl_result).toString!="0.0") {
		intentName=transform("JSONPATH", "$.result.metadata.intentName", curl_result).toString;
		logInfo("say_agent_1","say_agent_1")
//		say ("Very low score of understanding!!! You have to repeat!!!")
		logInfo("AgentJSON*** intentName (agent) --> ", intentName) ;	
//	} else {
//		intentName="NULL"
//	} 
	
	
	switch  intentName {
		case intentName.contains("name"): {				
				action=transform("JSONPATH", "$.result.action", curl_result).toString;
				to_say_more =transform("JSONPATH", "$.result.fulfillment.speech", curl_result).toString ;
								
				if (logging==1) {
//					logInfo("AgentJSON*** curl_result (agent) --> ", curl_result) ;
					logInfo("AgentJSON*** source (agent) --> ", source) ;
					logInfo("AgentJSON*** intentName (agent) --> ", intentName) ;
					logInfo("AgentJSON*** to_say_more (agent) --> ", to_say_more) ;
				}
				logInfo("say_agent_2","say_agent_2")
				if (to_say_more.length<250) {
					say(to_say_more)	
				}
		}
			
		case intentName.contains("smarthome") : {
				if (transform("JSONPATH", "$.result.actionIncomplete", curl_result).toString=="true") {
					action_incomplete=true;	
				} else {
					action_incomplete=false;
				}
				
				action_full=transform("JSONPATH", "$.result.action", curl_result).toString;
				action_parts = action_full.split("\\.");
				actionPartsSize= action_parts.size;
				
				
//				intent== action_parts.get(0); // always "smarthome"
				device = action_parts.get(1);
				if (device.contains("locks")) {
					if (!transform("JSONPATH", "$.result.parameters.lock", curl_result).nullOrEmpty) {
						device = (transform("JSONPATH", "$.result.parameters.lock", curl_result)).toString;	
					} else if (!transform("JSONPATH", "$.result.contexts.0.parameters.lock", curl_result).nullOrEmpty) {
						device = (transform("JSONPATH", "$.result.contexts.0.parameters.lock", curl_result)).toString;
					}
					
				}
				action = action_parts.get(2);
				if (actionPartsSize>=4) {
					action1 = action_parts.get(3);
				}
					
				to_say_more =transform("JSONPATH", "$.result.fulfillment.speech", curl_result).toString ;
				
				room = (transform("JSONPATH", "$.result.parameters.room", curl_result)).toString;
				
				if(logging==1) {
					logInfo("action_full --> ",action_full);
					logInfo("action_parts.size --> " ,actionPartsSize.toString);
					logInfo("AgentJSON*** smart - incoplete > ", action_incomplete.toString);
					logInfo("AgentJSON*** smart - action ---> ", action);
					logInfo("AgentJSON*** smart - action1 --> ", action1);	
					logInfo("AgentJSON*** smart - device ---> ", device);
					logInfo("AgentJSON*** smart - room -----> ", room);				
					logInfo("AgentJSON*** smart - say more -> ", to_say_more);
				}
				if (action_incomplete) { // leipoun stoixeia px room, action klp
					
					say(to_say_more)
						action_incomplete=true
					
				} else {  // den leipoyn stoixeia
					logInfo("say_agent_3","say_agent_3")
					to_say="Nothing more to know. I am going to " + action + " " + action1 + " the " + device + " in the " + room + "."
						if (to_say.length<250) {
							say(to_say)	
						}	
						action_incomplete=false
				}
				}
		
		case intentName.contains("assistantask") : {
			to_say_more = transform("JSONPATH", "$.result.fulfillment.speech", curl_result).toString ;
			logInfo("say_agent_4","say_agent_4")
			if (to_say_more.length<250) {
				say(to_say_more)	
			}
		}
		
		case intentName.contains("NULL") : {
			say ("Intent is NULL.  I have to find out what's going on!!!")
		}
	}
	end
	
